import subprocess
import os

gitignore = """
# Generated by dumbrain.ml.kaggle.lib.createGitIgnore

data/
data/*
output/
output/*

"""

def createGitIgnore( path ):
    with open( path, 'w+' ) as file:
        file.write( gitignore )

def download( competition, data_dir ):
    subprocess.check_output( [ 'kaggle', 'competitions', 'download', '-p', data_dir, '-c', competition ] )
    unzip_all( data_dir )
    return os.listdir( data_dir )

def initCompetition( competition ):
    data_dir = os.path.join( os.getcwd(), 'data' )
    if not os.path.exists( data_dir ):
        os.makedirs( data_dir )
        download( competition, data_dir )

    output_dir = os.path.join( os.getcwd(), 'output' )
    if not os.path.exists( output_dir ):
        os.makedirs( output_dir )

    gitignore_path = os.path.join( os.getcwd(), '.gitignore' )
    if not os.path.exists( gitignore_path ):
        createGitIgnore( gitignore_path )

    return list( map( lambda file: 'data/' + file, os.listdir( data_dir ) ) )

def unzip_all( data_dir ):
    files = os.listdir( data_dir )
    for file in files:
        if not file.endswith( '.zip' ):
            continue
        print( file )

def submit( competition, output_file, message=None ):
    if message is None:
        message = input( 'Message' )
    subprocess.check_output( [ 'kaggle', 'competitions', 'submit', competition, '-f', output_file, '-m', message ] )